controller:
  parallelism: 10
  metricsConfig:
    # -- Enables prometheus metrics server
    enabled: true
  
  podAnnotations:
    ad.datadoghq.com/<CONTAINER_IDENTIFIER>.checks: |
      {
        "openmetrics": {
          "init_config": {},
          "instances": [
            {
              "openmetrics_endpoint": "http://argo.argo-argo-workflows-server:8080/metrics",
              "namespace": "argo",
              "metrics": [
                "argo_pod_missing",
                "argo_workflows_count",
                "argo_workflows_error_count",
                "argo_workflows_k8s_request_total",
                "argo_workflows_operation_duration_seconds",
                "argo_workflows_pods_count",
                "argo_workflows_queue_adds_count",
                "argo_workflows_queue_depth_count",
                "argo_workflows_queue_latency",
                "argo_workflows_workers_busy",
                "argo_workflows_workflow_condition",
                "argo_workflows_workflows_processed_count"
                ]
            }
          ]
        }
      }      

  # -- enable persistence using postgres
  persistence:
    archive: true
    archiveLabelSelector:
      matchLabels:
        workflows.argoproj.io/archive-strategy: "true"
    postgresql:
      host: GEN3_ARGO_DB_HOST
      port: 5432
      database: GEN3_ARGO_DB_NAME
      tableName: argo_workflows
  #   # the database secrets must be in the same namespace of the controller
      userNameSecret:
        name: argo-db-creds
        key: db_username
      passwordSecret:
        name: argo-db-creds
        key: db_password

  workflowDefaults: 
    spec:
      archiveLogs: true

  # -- [Node selector]
  nodeSelector:
    kubernetes.io/os: linux
  # -- [Tolerations] for use with node taints
  tolerations: []
  # -- Assign custom [affinity] rules
  affinity: {}
  # -- Leverage a PriorityClass to ensure your pods survive resource shortages.
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  priorityClassName: ""

server:
  baseHref: "/argo/"
  # -- Extra arguments to provide to the Argo server binary, such as for disabling authentication.
  extraArgs:
  - --auth-mode=server 
  - --auth-mode=client
  extraEnv:
  - name: ARGO_HTTP1
    value: "true"

# -- Influences the creation of the ConfigMap for the workflow-controller itself.
useDefaultArtifactRepo: true

artifactRepository:
  # -- Archive the main container logs as an artifact
  archiveLogs: true
  # -- Store artifact in a S3-compliant object store
  s3:
    # Note the `key` attribute is not the actual secret, it's the PATH to
    # the contents in the associated secret, as defined by the `name` attribute.
    accessKeySecret:
      name: argo-s3-creds
      key: AccessKeyId
    secretKeySecret:
      name: argo-s3-creds
      key: SecretAccessKey
    bucket: GEN3_ARGO_BUCKET
    endpoint: s3.amazonaws.com
